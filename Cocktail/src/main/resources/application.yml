server:
  port: 8080

spring:
  application:
    name: cocktail
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    check-template-location: true
    cache: false

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        show_sql: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 2MB

      max-request-size: 10MB
    web:
      resources:
        static-locations: classpath:/META-INF/resources/, classpath:/resources/, classpath:/static/, classpath:/public/, file:images/

#  security:
#    oauth2:
#      client:
#        registration:
#          kakao:
#            client-name: kakao
#            client-id: 566c4aba4b5d2b88d82e241bda9f0c37 #REST API key
#            client-secret: LKrNtYkfqSXAz2soo3LRfzOIHGXZXc52
#            scope: profile_nickname, profile_image, account_email
#            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
#            authorization-grant-type: authorization_code # 인가코드를 통한 로그인 방식
#            client-authentication-method: POST
#        provider:
#          kakao:
#            # kakao api
#            authorization-uri: https://kauth.kakao.com/oauth/authorize
#            token-uri: https://kauth.kakao.com/oauth/token
#            # 사용자 정보 가져오기 위한 API
#            user-info-uri: https://kapi.kakao.com/v2/user/me
#            user-name-attribute: id

springdoc:
  swagger-ui:
    groups-order: DESC # 그룹 순서를 내림차순으로 설정
    tags-sorter: alpha # 태그를 알파벳 순으로 정렬
    operations-sorter: method # HTTP 메서드(GET, POST 등) 순서로 정렬
    disable-swagger-default-url: true # 기본 Swagger URL 비활성화
    display-request-duration: true # 요청의 처리 시간을 표시
    defaultModelsExpandDepth: 2 # 기본 모델의 확장 깊이 설정
    defaultModelExpandDepth: 2 # 단일 모델의 확장 깊이 설정
  api-docs:
    path: /api-docs # API 문서 경로 설정
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  writer-with-default-pretty-printer: true # JSON을 예쁘게 출력
#  paths-to-match:
#    - /api/v1/** # 특정 경로의 API만 매칭

openai:
  model: ${MODEL}
  api:
    key: ${API_KEY}
    url: ${API_URL}

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.hibernate.orm.jdbc.bind: TRACE